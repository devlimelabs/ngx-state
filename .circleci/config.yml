version: 2.1

executors:
  ng-executor:
    docker:
      - image: circleci/node:12-browsers
    working_directory: ~/ngx-state

jobs:
  build:
    executor: ng-executor
    steps:
      # CHECKOUT CODE
      - checkout

      - restore_cache:
          key: deps-cache-{{ checksum "yarn.lock" }}

      # INSTALL GLOBAL DEPENDENCIES
      - run:
          name: Install Global Dependencies
          command: yarn global add codecov tslint@~5.20.0 typescript@~3.8.3 semantic-release @angular/cli

      # INSTALL APP DEPENDENCIES
      - run:
          name: Install App Dependencies
          command: yarn install

      - save_cache:
          key: deps-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ./node_modules

      # RUN LINTING
      - run:
          name: TSlint
          command: yarn lint

      # RUN BUILD
      - run:
          name: Build Library
          command: yarn build

      - save_cache:
          key: dist-{{ .Revision }}
          paths:
              - dist

  test:
    executor: ng-executor
    steps:
      - checkout

      - restore_cache:
          key: deps-cache-{{ checksum "yarn.lock" }}

      - restore_cache:
          key: dist-{{ .Revision }}

      # INSTALL GLOBAL DEPENDENCIES
      - run:
          name: Install Global Dependencies
          command: yarn global add codecov tslint@~5.20.0 typescript@~3.8.3 semantic-release @angular/cli @angular/compiler-cli

      # RUN TESTS
      - run:
          name: Angular Unit Tests  && Codecov Coverage
          command: xvfb-run -a yarn test:ci

      # REPORT TEST COVERAGE
      - run:
          name: Report to Codecov
          command: bash <(curl -s https://codecov.io/bash)

  release:
    executor: ng-executor
    steps:
      - add_ssh_keys:
          fingerprint:
            - "7a:79:11:28:f1:58:ee:08:75:27:39:34:09:43:62:ee"

      - checkout

      - restore_cache:
          key: deps-cache-{{ checksum "yarn.lock" }}

      - restore_cache:
          key: dist-{{ .Revision }}

      - run:
         name: release
         command: yarn semantic-release || true

workflows:
  version: 2
  build_test_release:
    jobs:
      - build
      - test:
          requires:
            - build
      - release:
          requires:
            - test
          filters:
            branches:
              only: master
